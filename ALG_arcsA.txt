{
    "params": "header1:{class:\"text\", type:\"H3\", value:\"Geometric Properties\"}\nseed:{default:1, min:1, max:100, step:1, class:\"number\"}\nN:{default:100, min:10, max:1000, step:10, class:\"slider\"}\nx:{default:0.0, min:-1, max:1, step:0.01, class:\"slider\"}\ny:{default:0.0, min:-1, max:1, step:0.01, class:\"slider\"}\nradCirc:{default:0.3, min:0.1, max:0.7, step:0.01, class:\"slider\"}\nrot:{default:0, min:0, max:twoPI, step:Math.PI/128, class:\"slider\"}\n\n\nheader2:{class:\"text\", type:\"H3\", value:\"Color Properties\"}\nhueCenter:{default:0, min:0, max:255, step:1, class:\"slider-hue\"}\nsatCenter:{default:50, min:0, max:100, step:1, class:\"slider-sat\"}\nlitCenter:{default:50, min:0, max:100, step:1, class:\"slider-lit\"}\nalpha:{default:255, min:0, max:255, step:1, class:\"slider-lit\"}\ncolorVar:{default:10, min:0, max:100, step:1, class:\"slider\"}\n\n\nheader3:{class:\"text\", type:\"H3\", value:\"Line/Fill Properties\"}\nlineWidthFraction:{default:0.1, min:0.001, max:0.2, step:0.001, class:\"slider\"}\n\n",
    "drawFunction": "// for each arc segment\nfor(let i=0; i<N; i++) {\n  \n  // determine linewidth of the arc segment\n  var lineWidth = vary(lineWidthFraction*radCirc, 50);  \n  \n  // determine colors of the arc segment\n  var hue = vary(hueCenter, colorVar);\n  var sat = vary(satCenter, colorVar);\n  var lit = vary(litCenter, colorVar);\n  \n  // determine radiusX and radiusY for the arc segment (they are set equal in this example)\n  var thisRadX = getRandomFloat( 0, radCirc-lineWidthFraction*radCirc/2 );\n  var thisRadY = thisRadX;\n  \n  // determine start and end angle for the arc segment\n  var startAngle = getRandomFloat(0,twoPI);\n  var addAngle = getRandomFloat(Math.PI/32,Math.PI/3);\n  var endAngle = startAngle + addAngle;\n\n  // draw the arc segment\n  drawArc(x, y, thisRadX, thisRadY, rot, startAngle, endAngle, lineWidth, hue, sat, lit, alpha, 1);  \n  \n}\n"
}