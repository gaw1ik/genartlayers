{
    "params": "section1:{class:\"text\", value:\"Location/Scale/Orientation\"}\nx0:{class:\"slider\", default:0.0, min:-1, max:1, step:0.01}\ny0:{class:\"slider\", default:0.0, min:-1, max:1, step:0.01}\nscale:{class:\"slider\", default:1, min:0.1, max:8, step:0.1}\nthetad0:{class:\"slider\", default:0, min:0, max:360, step:1}\n\n\n\nsection2:{class:\"text\",value:\"Fractal Properties\"}\nnLevels:{class:\"number\", default:3, min:1, max:9, step:1}\nlevelCutoff:{class:\"number\", default:0, min:0, max:8, step:1}\nnPoints:{class:\"number\", default:3, min:1, max:12, step:1}\n\n\nsection3:{class:\"text\",value:\"Radial Properties\"}\nr0:{class:\"slider\", default:0.3, min:0.01, max:1, step:0.01}\nr0Point:{class:\"slider\", default:0.3, min:0.01, max:1, step:0.01}\nradRatio:{class:\"slider\", default:2, min:0.1, max:8, step:0.1}\n\n\nsection4:{class:\"text\",value:\"Line Properties\"}\nlineWidthRatio:{class:\"slider\", default:0.01, min:0.001, max:0.1, step:0.001}\nlineWidthVary:{class:\"slider\", default:10, min:0, max:100, step:1}\n\n\nsection5:{class:\"text\",value:\"Color\"}\nhueCenter1:{class:\"slider-hue\", default:90, min:0, max:359, step:1}\nsatCenter1:{class:\"slider-sat\", default:30, min:0, max:100, step:1}\nlitCenter1:{class:\"slider-lit\", default:0,  min:0, max:100, step:1}\ncolorVary:{class:\"slider\", default:10, min:0, max:100, step:1}\n\n\n\nsection6:{class:\"text\",value:\"Defectivity/Error\"}\nseed:{class:\"number\", default:1, min:1, max:1000, step:1}\ngrowthDefectivity:{class:\"slider\", default:0, min:0, max:100, step:1}\nspotDefectivity:{class:\"slider\", default:0, min:0, max:100, step:1}\nwarble:{class:\"slider\", default:0, min:0, max:1, step:0.001}\nthetaError:{class:\"slider\", default:0, min:0, max:360, step:1}\nradiusError:{class:\"slider\", default:0, min:0, max:100, step:1}\n   \n\n\n",
    "drawFunction": "// non-control parameters\nvar alpha = 255;\nvar fillMode = 1;\n\n\n// variables\nlet shapes = [];\nlet locs = [];\nvar x;\nvar y;  \nvar radius;\nvar radiusPoint;\nvar radiusX;\nvar radiusY;\nvar hue;\nvar sat;\nvar lit;\nvar cy;\nvar cy;\n\n\n\nvar thetar0 = deg2rad(thetad0);\n\n\n// CALC\nshapes = [];\n// initialize shapes array\nfor(let l=0; l<nLevels; l++) {\n  shapes.push([]);    \n}\n\n\n\nshapes[0].push( {x1:x0,y1:y0} ); \n\nfor(let l=0; l<nLevels-1; l++) {\n\n  // locs = shapes[l];\n\n  radius = r0/(radRatio**l);\n\n  for(let i=0; i<shapes[l].length; i++) {\n\n    // the location of the circle center for this level and this location\n    cx = shapes[l][i].x1;\n    cy = shapes[l][i].y1;      \n\n    for (let j=0; j<nPoints; j++) {   \n\n      if(makeChoice(100-growthDefectivity)==1) {\n\n        thetar = thetar0 - Math.PI/2 + getRandomFloat(-thetaError,thetaError);\n\n        x1 = cx + scale*radius * Math.cos(j * 2*Math.PI / nPoints + thetar);\n        y1 = cy + scale*radius * Math.sin(j * 2*Math.PI / nPoints + thetar);\n\n        shapes[l+1].push( {x1:x1,y1:y1} ); \n\n      }\n\n    }\n\n\n\n  }\n\n\n}\n\n\n\n\n// DRAW\nfor(let l=0; l<nLevels; l++) {\n\n  // shapes = shapes[l];\n\n  if( l>=levelCutoff ) {\n\n    radiusPoint1 = r0Point/(radRatio**l) * scale;\n\n\n    for(let i=0; i<shapes[l].length; i++) {\n      // draw circle\n\n      if(makeChoice(100-spotDefectivity)==1) {\n\n        radiusPoint = vary(radiusPoint1,radiusError)\n\n        radiusX = radiusPoint;\n        radiusY = radiusPoint;\n        x1 = shapes[l][i].x1;\n        y1 = shapes[l][i].y1;\n\n        var maxAmount = radiusPoint * warble;\n        x1 = plusOrMinus(x1, maxAmount);\n        y1 = plusOrMinus(y1, maxAmount);\n\n        var thetaStart = getRandomFloat(0,2*Math.PI);\n        var thetaEnd   = getRandomFloat(0,2*Math.PI);\n\n        var thetaStart = 0;\n        var thetaEnd   = 2*Math.PI;\n        \n        var lineWidth = radiusPoint*lineWidthRatio * scale;\n        lineWidth = vary(lineWidth, lineWidthVary);\n\n        if(getRandomFloat()<0.08) {\n          var hue = hueCenter1 + 180;\n          var sat = vary(satCenter1-40, colorVary);\n        } else {\n          hue = hueCenter1;\n          sat = vary(satCenter1, colorVary);\n        }\n        \n        var lit = vary(litCenter1, colorVary);\n        \n        //console.log(\"x1\", x1);\n        \n        drawEllipse(x1, y1, radiusX, radiusY, 0, lineWidth, hue, sat, lit, alpha, fillMode)\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n"
}